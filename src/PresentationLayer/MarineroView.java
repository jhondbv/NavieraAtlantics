/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PresentationLayer;

import Business.EsposaLogic;
import Business.HijoLogic;
import Business.MarineroLogic;
import Class.Esposa;
import Class.Esposas;
import Class.Hijo;
import Class.Hijos;
import Class.ID;
import Class.Marinero;
import Class.Marineros;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jhon
 */
public class MarineroView extends javax.swing.JFrame {
private static int id;
    private static EsposaLogic esposaLogic;
    private static HijoLogic hijoLogic;
    private static MarineroLogic marineroLogic;
    /**
     * Creates new form MarineroView
     */
    public MarineroView() {
        initComponents();
        configClose();
        hijoLogic=new HijoLogic();
        esposaLogic= new EsposaLogic();
        id=0;
        LoadHijos();
        LoadEsposas();
        lstHijos.setModel(new DefaultListModel());
        marineroLogic= new MarineroLogic();
        GetData();
        
    }

     public void configClose()
    {
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    }
     
     public void GetData() {
        Marineros items  = marineroLogic.Consultar();
        DefaultTableModel model = (DefaultTableModel) tblMarineros.getModel();
        if(items==null)
            return;
        for (Marinero marinero : items.List) {
            model.addRow(new Object[]{marinero.getId(), marinero.getNombre(), marinero.getSexo(), marinero.isIsCapitan()});
        }
    }
     
     public void LoadHijos()
     {
        Hijos lst = hijoLogic.Consultar();
        DefaultComboBoxModel model = (DefaultComboBoxModel)cmbHijos.getModel();
        model.removeAllElements();
        for (Hijo item : lst.List) {
            model.addElement(item);
        }
     }
     
     public void LoadEsposas()
     {
         Esposas lst = esposaLogic.Consultar();
         DefaultComboBoxModel model = (DefaultComboBoxModel) cmbEsposas.getModel();
         
         for (Esposa item : lst.List) {
             model.addElement(item);
         }
     }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tblMarinero = new javax.swing.JScrollPane();
        tblMarineros = new javax.swing.JTable();
        btnAtras = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        cmbEsposas = new javax.swing.JComboBox<>();
        cmbSexo = new javax.swing.JComboBox<>();
        cmbHijos = new javax.swing.JComboBox<>();
        btnAgregarHijos = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstHijos = new javax.swing.JList<>();
        btnAgregar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        rdbCapitan = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("MARINEROS");

        tblMarineros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Sexo", "Capitan"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMarineros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMarinerosMouseClicked(evt);
            }
        });
        tblMarinero.setViewportView(tblMarineros);
        if (tblMarineros.getColumnModel().getColumnCount() > 0) {
            tblMarineros.getColumnModel().getColumn(0).setResizable(false);
            tblMarineros.getColumnModel().getColumn(1).setResizable(false);
            tblMarineros.getColumnModel().getColumn(2).setResizable(false);
            tblMarineros.getColumnModel().getColumn(3).setResizable(false);
        }

        btnAtras.setText("Atras");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre");

        jLabel3.setText("Esposa");

        jLabel4.setText("Sexo");

        jLabel5.setText("Hijos");

        cmbEsposas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguna" }));

        cmbSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M", "F" }));

        btnAgregarHijos.setText("Agregar");
        btnAgregarHijos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarHijosActionPerformed(evt);
            }
        });

        lstHijos.setToolTipText("");
        lstHijos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstHijosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lstHijos);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        rdbCapitan.setText("Capitan");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(tblMarinero, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addComponent(cmbEsposas, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(rdbCapitan)
                                                    .addComponent(cmbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmbHijos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnAgregarHijos))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE))
                                .addGap(21, 21, 21))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(btnAgregar)
                                .addGap(51, 51, 51)
                                .addComponent(btnActualizar)
                                .addGap(76, 76, 76)
                                .addComponent(btnEliminar)
                                .addGap(56, 56, 56)
                                .addComponent(btnLimpiar)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cmbEsposas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cmbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(rdbCapitan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgregar)
                            .addComponent(btnActualizar)
                            .addComponent(btnLimpiar)
                            .addComponent(btnEliminar))
                        .addGap(28, 28, 28)
                        .addComponent(tblMarinero, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cmbHijos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregarHijos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        Marinero marinero = new Marinero();

        marinero.setNombre(txtNombre.getText());
        marinero.setSexo(cmbSexo.getSelectedItem().toString().charAt(0));
       
        if (cmbEsposas.getSelectedIndex() > 0) {
                DefaultComboBoxModel cmbmodel = (DefaultComboBoxModel) cmbEsposas.getModel();
                Esposa esposa = (Esposa) cmbEsposas.getSelectedItem();
                if(esposa.getIdEsposo()>0)
                {
                            JOptionPane.showMessageDialog(this, "Esta esposa ya esta asignada a otro marinero");
                            return;

                }
                
                marinero.setIdEsposa(esposa.getId());
                marinero.esposa = esposa;
                
            }
        marinero.setIsCapitan(rdbCapitan.isSelected());
        DefaultListModel listahijos = (DefaultListModel) lstHijos.getModel();
         List<ID> hijos = new ArrayList<ID>();
            for (int i = 0; i < listahijos.getSize(); i++) {
                ID t = new ID();
                t.id=((Hijo)listahijos.getElementAt(i)).getId();
                hijos.add(t);
            }
        marinero.setHijos(hijos);

    try {
        marineroLogic.Guardar(marinero);
    } catch (Exception ex) {
                                   JOptionPane.showMessageDialog(this, ex.getMessage());
                                   return;

    }

        DefaultTableModel model = (DefaultTableModel) tblMarineros.getModel();
        model.addRow(new Object[]{marinero.getId(), marinero.getNombre(), marinero.getSexo(), marinero.isIsCapitan()});
        Clear();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        if (id > 0) {
            int fila = tblMarineros.getSelectedRow();
            Marinero marinero = marineroLogic.Consultar(id);
            marinero.setNombre(txtNombre.getText());
            marinero.setSexo(cmbSexo.getSelectedItem().toString().charAt(0));
            if (cmbEsposas.getSelectedIndex() > 0) {
                DefaultComboBoxModel cmbmodel = (DefaultComboBoxModel) cmbEsposas.getModel();
                Esposa esposa = (Esposa) cmbEsposas.getSelectedItem();
                if(esposa.getIdEsposo()>0 && esposa.getIdEsposo()!= id)
                {
                            JOptionPane.showMessageDialog(this, "Esta esposa ya esta asignada a otro marinero");
                            return;

                }
                marinero.setIdEsposa(esposa.getId());
                marinero.esposa = esposa;
            }

            marinero.setIsCapitan(rdbCapitan.isSelected());
            DefaultListModel listahijos = (DefaultListModel) lstHijos.getModel();
            List<ID> hijos = new ArrayList<ID>();
            for (int i = 0; i < listahijos.getSize(); i++) {
                ID t = new ID();
                t.id=((Hijo)listahijos.getElementAt(i)).getId();
                hijos.add(t);
            }
            marinero.setHijos(hijos);
           
            try {
                marineroLogic.Actualizar(marinero);
            } catch (Exception ex) {
                            JOptionPane.showMessageDialog(this, ex.getMessage());
                            return;

            }
             Clear();
            DefaultTableModel model = (DefaultTableModel) tblMarineros.getModel();
            model.removeRow(fila);
            model.insertRow(fila, new Object[]{marinero.getId(), marinero.getNombre(), marinero.getSexo(), marinero.isIsCapitan()});

        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un registro para editar");
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (id > 0) {
            int fila = tblMarineros.getSelectedRow();
            marineroLogic.Eliminar(id);
            DefaultTableModel model = (DefaultTableModel) tblMarineros.getModel();
            model.removeRow(fila);
            Clear();
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un registro para eliminar");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
         Clear();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void tblMarinerosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMarinerosMouseClicked
        int fila = tblMarineros.getSelectedRow();
        if (fila >= 0) {
            txtNombre.setText(tblMarineros.getValueAt(fila, 1).toString());
            id = Integer.parseInt(tblMarineros.getValueAt(fila, 0).toString());
            rdbCapitan.setSelected(Boolean.valueOf(tblMarineros.getValueAt(fila, 3).toString()));
             Marinero item = marineroLogic.Consultar(id);
             if(item.getIdEsposa()>0)
            SelectEsposa(item.getIdEsposa());
            SetHijos(item);
            DefaultComboBoxModel model = (DefaultComboBoxModel)cmbSexo.getModel();
            for (int i = 0; i < model.getSize(); i++) {
                if(model.getElementAt(i).equals(tblMarineros.getValueAt(fila, 2).toString()))
                {
                    cmbSexo.setSelectedIndex(i);
                }
            }
        }
    }//GEN-LAST:event_tblMarinerosMouseClicked

    private void btnAgregarHijosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarHijosActionPerformed
        DefaultComboBoxModel model = (DefaultComboBoxModel) cmbHijos.getModel();
        DefaultListModel listaHijos = (DefaultListModel) lstHijos.getModel();
        Hijo hijonuevo = (Hijo) model.getSelectedItem();
            if(hijonuevo.getIdPapa()>0)
            {
                if(id>0 && hijonuevo.getIdPapa()!=id)
                {
                 JOptionPane.showMessageDialog(this, "Este hijo ya pertenece a otro papa");
                return;
                }
            }
            
                
        for (int i = 0; i < listaHijos.getSize(); i++) {
            Hijo hijo = (Hijo) listaHijos.getElementAt(i);
            if (hijo.getId() == hijonuevo.getId()) {
                JOptionPane.showMessageDialog(this, "No se puede agregar el mismo hijo dos veces");
                return;

            }
            
        }
        listaHijos.addElement(model.getSelectedItem());
    }//GEN-LAST:event_btnAgregarHijosActionPerformed

    private void lstHijosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstHijosMouseClicked
        int fila = lstHijos.getSelectedIndex();
        if (fila >= 0) {
             DefaultListModel listatracos = (DefaultListModel) lstHijos.getModel();
           listatracos.remove(fila);
        } 
    }//GEN-LAST:event_lstHijosMouseClicked

    
    public void SelectEsposa(int id)
    {
        int size = cmbEsposas.getItemCount();
        DefaultComboBoxModel model = (DefaultComboBoxModel)cmbEsposas.getModel();
        for (int i = 1; i < size; i++) {
            Esposa item = (Esposa)model.getElementAt(i);
            if(item.getId()==id)
            {
                model.setSelectedItem(item);
            }
        }
    }
    
    public void SetHijos(Marinero item) {
         DefaultListModel listahijos = (DefaultListModel) lstHijos.getModel();
         listahijos.removeAllElements();
        for (ID idHijo : item.getHijos()) {
            Hijo hijo = hijoLogic.Consultar(idHijo.id);
            if (hijo != null) {
               
                listahijos.addElement(hijo);
            }

        }

    }
    
    public void Clear() {
     
         
         
         txtNombre.setText("");
        DefaultListModel listaHijos = (DefaultListModel) lstHijos.getModel();
        listaHijos.removeAllElements();
        rdbCapitan.setSelected(false);
         cmbEsposas.setSelectedIndex(0);
         cmbHijos.setSelectedIndex(0);
         cmbSexo.setSelectedIndex(0); 
         
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarineroView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarineroView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarineroView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarineroView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarineroView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAgregarHijos;
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox<String> cmbEsposas;
    private javax.swing.JComboBox<String> cmbHijos;
    private javax.swing.JComboBox<String> cmbSexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> lstHijos;
    private javax.swing.JRadioButton rdbCapitan;
    private javax.swing.JScrollPane tblMarinero;
    private javax.swing.JTable tblMarineros;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
